check_defined = $(foreach 1,$1,$(__check_defined))
__check_defined = \
    $(if $(value $1),, \
      $(error Undefined $1$(if $(value 2), ($(strip $2)))))

copy_file = @if [ -a $1 ]; then \
		echo Copying $$(basename $1); \
		mkdir -p $$(dirname $2); \
		cp -f $1 $2; \
	else \
		echo Cannot find $$(basename $1) in $$(dirname $1); \
		exit 1; \
	fi;

	  
ifneq ($(MAKECMDGOALS),clean)
  $(call check_defined, NAME, name of the bin)
  $(call check_defined, BIN_TYPE, type of the bin [exec|shared|static])
endif

DEPENDENCIES ?=

CXX ?= g++
AR ?= ar

CFLAGS ?= -Wall -Werror -std=gnu++17
ARFLAGS := cru

INCLUDE_DIRS += -I/usr/local/include

SRC_DIR ?= ./src
TMP_DIR ?= ./tmp
OBJ_DIR ?= $(TMP_DIR)/obj
DEP_DIR ?= $(TMP_DIR)/depend
BIN_DIR ?= ./bin
LIB_DIR ?= ./lib
INC_DIR ?= $(SRC_DIR)/includes

PARENT_DIR = ..
PARENT_BIN_DIR ?= ./bin
PARENT_LIB_DIR ?= ./lib
PARENT_BIN_DEPT ?= $(wildcard $(PARENT_DIR)/$(PARENT_BIN_DIR)/*)
PARENT_LIB_DEPT ?= $(wildcard $(PARENT_DIR)/$(PARENT_LIB_DIR)/*)

CPP_FILES ?= $(subst $(SRC_DIR)/,,$(shell find $(SRC_DIR) -type f -name '*.cpp'))
HPP_FILES ?= $(subst $(SRC_DIR)/,,$(shell find $(SRC_DIR) -type f -name '*.hpp'))
DEP_FILES := $(CPP_FILES:%.cpp=$(DEP_DIR)/%.d)
OBJ_FILES := $(CPP_FILES:%.cpp=$(OBJ_DIR)/%.o)

ifneq ($(MAKECMDGOALS),clean)
  ifeq ($(BIN_TYPE),exec)
    TARGET_EXT := exe
    TARGET_DIR := $(BIN_DIR)
  else ifeq ($(BIN_TYPE),shared)
    TARGET_EXT := dll
    TARGET_DIR := $(BIN_DIR)
	CFLAGS += -D LIB_BUILD -shared -Wl,--out-implib=$(LIB_DIR)/lib$(NAME).dll.a
  else ifeq ($(BIN_TYPE),static)
    TARGET_EXT := a
    TARGET_DIR := $(LIB_DIR)
  else
	$(error Wrong bin type: [exec|shared|static])
  endif
endif

ifeq ($(BIN_TYPE),static)
TARGET := $(TARGET_DIR)/lib$(NAME).$(TARGET_EXT)
else
TARGET := $(TARGET_DIR)/$(NAME).$(TARGET_EXT)
endif

.PHONY: all depend clean test parent

	
all: $(TARGET) $(DEPENDENCIES) parent

depend: $(DEPENDENCIES)

parent: $(PARENT_BIN_DEPT) $(PARENT_LIB_DEPT)

$(PARENT_BIN_DEPT): $(PARENT_DIR)/$(PARENT_BIN_DIR)/%:
	@( \
	  cd $(PARENT_DIR); \
	  make $@; \
	)

ifneq ($(MAKECMDGOALS),clean)
-include $(DEP_FILES)
endif

$(TARGET): $(OBJ_FILES) $(PARENT_BIN_DEPT) $(PARENT_LIB_DEPT)
	@echo Linking $@
	@mkdir -p $(BIN_DIR)
	@mkdir -p $(LIB_DIR)
ifeq ($(BIN_TYPE),static)
	$(AR) $(ARFLAGS) $@ $(OBJ_FILES) $(LIBS_PATH)
else
	$(CXX) $(CFLAGS) $(OBJ_FILES) $(LIB_DIRS) $(LIBS) -o $@
endif
		
$(OBJ_FILES): $(OBJ_DIR)/%.o: $(SRC_DIR)/%.cpp
	@echo Compiling $<
	@mkdir -p `dirname $(patsubst %, $(DEP_DIR)/%.d, $*)`
	@mkdir -p `dirname $@`
	$(CXX) $(CFLAGS) $(INCLUDE_DIRS) -MT $@ -MMD -MP -MF $(patsubst %, $(DEP_DIR)/%.d, $*) -c -o $@ $<

clean:
	rm -rf $(TMP_DIR)
	rm -rf $(BIN_DIR)
	rm -rf $(LIB_DIR)
	
test: $(TARGET) $(DEPENDENCIES)
	@echo -------------------------------------------; \
	echo Running tests; \
	echo -------------------------------------------; \
	cd $(BIN_DIR); \
	./$(notdir $(TARGET)); \
	echo -------------------------------------------; \
	echo End tests; \
	echo -------------------------------------------;